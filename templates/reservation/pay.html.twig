{% extends 'base.html.twig' %}

{% block title %}Reservation{% endblock %}
    {% block stylesheet %}
{% endblock %}

{% block body %}
    <h1 class="text-center">Reservation</h1>
        <div class="container-payment">
            <table class="table text-center col-7 mr-4">
                <tbody>

                    <tr>
                        <th>Show</th>
                        <td>{{ reservation.representation.theShow.title }}</td>
                    </tr>
                    <tr>
                        <th>Date</th>
                        <td>{{ reservation.representation.schedule|date('d/m/Y') }}</td>
                    </tr>
                    <tr>
                        <th>Hours</th>
                        <td>{{ reservation.representation.schedule|date('H:i') }}</td>
                    </tr>

                </tbody>
            </table>
            {{ form_start(form, {attr: {id: form.vars.id}}) }}        
              <div id="card-element">
                <!-- Elements will create input elements here -->
              </div>

              <!-- We'll put the error messages in this element -->
              <div id="card-errors" role="alert"></div>

              <button class="btn btn-info mt-4">Pay</button>
            {{ form_widget(form.places) }}
            {{ form_end(form) }}
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        // Set your publishable key: remember to change this to your live publishable key in production
        // See your keys here: https://dashboard.stripe.com/account/apikeys
        var stripe = Stripe('pk_test_ASNDr2HbPLva4F0ZgIiJwYhv00knqSDB8e');
        
        //console.log("stripe");
        var elements = stripe.elements();
        // Custom styling can be passed to options when creating an Element.
        var style = {
          base: {
            // Add your base input styles here. For example:
            fontSize: '16px',
            color: '#32325d'
          }
        };

        // Create an instance of the card Element.
        var card = elements.create('card', {style: style});

        // Add an instance of the card Element into the `card-element` <div>.
        card.mount('#card-element');
        
        card.on('change', ({error}) => {
        const displayError = document.getElementById('card-errors');
          if (error) {
            displayError.textContent = error.message;
          } else {
            displayError.textContent = '';
          }
        });
        
        // Create a token or display an error when the form is submitted.
        var form = document.getElementById('{{ form.vars.id }}');
        form.addEventListener('submit', function(event) {
          event.preventDefault();

          stripe.createToken(card).then(function(result) {
           
            if (result.error) {
                //console.log('hello');
              // Inform the customer that there was an error.
              var errorElement = document.getElementById('card-errors');
              errorElement.textContent = result.error.message;
            } else {
              // Send the token to your server.
              stripeTokenHandler(result.token);
            }
          });
        });
        
        function stripeTokenHandler(token) {
            // Insert the token ID into the form so it gets submitted to the server
            var form = document.getElementById('{{ form.vars.id }}');
            //console.log('form');
            var hiddenInput = document.createElement('input');
            hiddenInput.setAttribute('type', 'hidden');
            hiddenInput.setAttribute('name', 'stripeToken');
            hiddenInput.setAttribute('value', token.id);
            form.appendChild(hiddenInput);

            // Submit the form
            form.submit();
          }
    </script>
{% endblock %}